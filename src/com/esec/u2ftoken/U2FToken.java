package com.esec.u2ftoken;

import javacard.framework.APDU;
import javacard.framework.Applet;
import javacard.framework.ISO7816;
import javacard.framework.ISOException;
import javacard.framework.Util;

public class U2FToken extends Applet {

	/**
	 * 存储attestation证书的二进制文件。FID是EF01
	 */
	public BinaryEF attestationCertFile;
	
	/**
	 * 版本号："U2F_V2"
	 */
	private static final byte[] version = {(byte)0x55, (byte)0x32, (byte)0x46, (byte)0x5F, (byte)0x56, (byte)0x32};
	/**
	 * attestation证书的字节数组。
	 * 对应项目中 doc/cert.der
	 */
	private static final byte[] attestationCert = {(byte)30, (byte)0x82, (byte)0x01, (byte)0x15, (byte)0x30, (byte)0x81, (byte)0xbc, (byte)0x02, (byte)0x09, (byte)0x00, (byte)0xc5, (byte)0xf4, (byte)0xee, (byte)0x4c, (byte)0x59, (byte)0x50, (byte)0x3e, (byte)0x05, (byte)0x30, (byte)0x0a, (byte)0x06, (byte)0x08, (byte)0x2a, (byte)0x86, (byte)0x48, (byte)0xce, (byte)0x3d, (byte)0x04, (byte)0x03, (byte)0x02, (byte)0x30, (byte)0x13, (byte)0x31, (byte)0x11, (byte)0x30, (byte)0x0f, (byte)0x06, (byte)0x03, (byte)0x55, (byte)0x04, (byte)0x03, (byte)0x13, (byte)0x08, (byte)0x59, (byte)0x61, (byte)0x6e, (byte)0x67, (byte)0x5a, (byte)0x68, (byte)0x6f, (byte)0x75, (byte)0x30, (byte)0x1e, (byte)0x17, (byte)0x0d, (byte)0x31, (byte)0x35, (byte)0x31, (byte)0x32, (byte)0x30, (byte)0x39, (byte)0x30, (byte)0x37, (byte)0x30, (byte)0x34, (byte)0x35, (byte)0x38, (byte)0x5a, (byte)0x17, (byte)0x0d, (byte)0x31, (byte)0x36, (byte)0x31, (byte)0x32, (byte)0x30, (byte)0x38, (byte)0x30, (byte)0x37, (byte)0x30, (byte)0x34, (byte)0x35, (byte)0x38, (byte)0x5a, (byte)0x30, (byte)0x13, (byte)0x31, (byte)0x11, (byte)0x30, (byte)0x0f, (byte)0x06, (byte)0x03, (byte)0x55, (byte)0x04, (byte)0x03, (byte)0x13, (byte)0x08, (byte)0x59, (byte)0x61, (byte)0x6e, (byte)0x67, (byte)0x5a, (byte)0x68, (byte)0x6f, (byte)0x75, (byte)0x30, (byte)0x59, (byte)0x30, (byte)0x13, (byte)0x06, (byte)0x07, (byte)0x2a, (byte)0x86, (byte)0x48, (byte)0xce, (byte)0x3d, (byte)0x02, (byte)0x01, (byte)0x06, (byte)0x08, (byte)0x2a, (byte)0x86, (byte)0x48, (byte)0xce, (byte)0x3d, (byte)0x03, (byte)0x01, (byte)0x07, (byte)0x03, (byte)0x42, (byte)0x00, (byte)0x04, (byte)0x72, (byte)0x9a, (byte)0x71, (byte)0xd0, (byte)0x81, (byte)0x62, (byte)0x42, (byte)0x84, (byte)0x92, (byte)0xf2, (byte)0xd9, (byte)0x61, (byte)0x92, (byte)0x4d, (byte)0x37, (byte)0x44, (byte)0x3a, (byte)0x4f, (byte)0x1b, (byte)0xda, (byte)0x58, (byte)0x0f, (byte)0x8a, (byte)0xea, (byte)0x29, (byte)0x20, (byte)0xd2, (byte)0x99, (byte)0x7c, (byte)0xbe, (byte)0xa4, (byte)0x39, (byte)0x60, (byte)0xce, (byte)0x72, (byte)0x9e, (byte)0x35, (byte)0xc1, (byte)0xf7, (byte)0x40, (byte)0x92, (byte)0xf2, (byte)0x25, (byte)0x0e, (byte)0x60, (byte)0x74, (byte)0x82, (byte)0x3f, (byte)0xc5, (byte)0x7f, (byte)0x33, (byte)0x60, (byte)0xb7, (byte)0xcd, (byte)0x39, (byte)0x69, (byte)0xc3, (byte)0xc3, (byte)0x12, (byte)0x5e, (byte)0xce, (byte)0x26, (byte)0x5c, (byte)0x29, (byte)0x30, (byte)0x0a, (byte)0x06, (byte)0x08, (byte)0x2a, (byte)0x86, (byte)0x48, (byte)0xce, (byte)0x3d, (byte)0x04, (byte)0x03, (byte)0x02, (byte)0x03, (byte)0x48, (byte)0x00, (byte)0x30, (byte)0x45, (byte)0x02, (byte)0x21, (byte)0x00, (byte)0xe7, (byte)0x67, (byte)0xfa, (byte)0x94, (byte)0x10, (byte)0x35, (byte)0xd5, (byte)0x85, (byte)0x3d, (byte)0x52, (byte)0xd8, (byte)0x7d, (byte)0x67, (byte)0x14, (byte)0x70, (byte)0xbc, (byte)0x76, (byte)0x3b, (byte)0xc5, (byte)0xb1, (byte)0x2e, (byte)0x1d, (byte)0x45, (byte)0x77, (byte)0xea, (byte)0x9f, (byte)0x8c, (byte)0xa6, (byte)0x74, (byte)0xe5, (byte)0x9d, (byte)0x39, (byte)0x02, (byte)0x20, (byte)0x3f, (byte)0xe1, (byte)0x1c, (byte)0xad, (byte)0x59, (byte)0xf5, (byte)0x35, (byte)0x76, (byte)0x00, (byte)0x1f, (byte)0x15, (byte)0xee, (byte)0x05, (byte)0xda, (byte)0x87, (byte)0x46, (byte)0xfe, (byte)0xd3, (byte)0x27, (byte)0x6b, (byte)0x16, (byte)0x82, (byte)0x9e, (byte)0x9d, (byte)0x5e, (byte)0xfd, (byte)0xff, (byte)0x70, (byte)0x5e, (byte)0x08, (byte)0x9c, (byte)0x6d};
	
	public U2FToken() {
		attestationCertFile = new BinaryEF((byte)0xEF, (byte)0x01); 
		attestationCertFile.setFileContent(attestationCert);
	}
	public static void install(byte[] bArray, short bOffset, byte bLength) {
		// GP-compliant JavaCard applet registration
		new U2FToken().register(bArray, (short) (bOffset + 1), bArray[bOffset]);
	}

	public void process(APDU apdu) {
		// Good practice: Return 9000 on SELECT
		if (selectingApplet()) {
			getSelectResponse(apdu);
			return;
		}

		byte[] buf = apdu.getBuffer();
		switch (buf[ISO7816.OFFSET_INS]) {
		case (byte) 0x00:
			break;
		default:
			// good practice: If you don't know the INStruction, say so:
			ISOException.throwIt(ISO7816.SW_INS_NOT_SUPPORTED);
		}
	}
	
	/**
	 * 选择applet时，返回"U2F_V2"
	 * @param apdu
	 */
	private void getSelectResponse(APDU apdu) {
		byte[] buffer = apdu.getBuffer();
		Util.arrayCopyNonAtomic(version, (short)0, buffer, (short)0, (short)version.length);
		apdu.setOutgoingAndSend((short)0, (short)version.length);
	}

}
